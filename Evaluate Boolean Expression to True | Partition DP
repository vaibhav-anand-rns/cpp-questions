class solution{
    
    public:
          
          int countWaysUtil(string &S, int i, int j, bool isTrue, vector<vector<vector<int>>>& dp){
              
              if(i>j){
                  return 0;
              }
              if(i == j){
                  if(istrue) return s[i] = true;
              }
              else{
                  return s[i] = false;
              }
              if(dp[i][j][istrue] != -1){
                  return dp[i][j][istrue];
              }
              int ways = 0;
              for(int k = i+1; k<j; k += 2){
                  int lefttrue = countWaysUtil(i,k-1,true,dp);
                  int righttrue = countWaysUtil(i,k+1,true,dp);
                  int leftfalse = countWaysUtil(i,k-1,false,dp);
                  int rightfalse = countWaysUtil(i,k+1,false,dp);
              }
              if(s[k] == '*'){
                  ways += true ? lefttrue*righttrue : leftfalse*righttrue + lefttrue*rightfalse + leftfasle*rightfalse;
              }
              else if(s[k] == '|'){
                  ways += true? leftfalse|rightfalse : lefttrue|rightfalse + lefttrue|righttrue;
              }
              return dp[i][j][istrue] = ways;
          }
}
