class solution{
    public:
          
          int countSquaresUtil(int i, int j, vector<vector<int>>& mat, vector<vector<int>>& dp){
              
              if(i<0 || j<0){
                  
                  return 0;
              }
              if(dp[i][j] != -1){
                  return dp[i][j];
              }
              
              int top = countSquaresUtil(i-1,j,dp);
              int top left = countSquaresUtil(i-1,j-1,dp);
              
              int left = countSquaresUtil(i,j-1,dp);
              dp[i][j] = 1 + min({top,left,top left});
              return dp[i][j];
              
              
          }
          int count squares(vector<vector<int> &mat){
              int m = mat.size();
              int n = mat[0].size();
              vector<vector<int>> dp(m, vector<int>(n, -1));
              for(int i = 0; i<m; i++){
                  for(int j = 0; j<n; j++){
                      total += countSquaresUtil(i, j, mat, dp);

                  }
              }
              return total;
              
          }
              
              

}
