class solution{
    
    public:
           
           void addEdge(int u,int v, int weight){
               
               adj[u].push_back({v,weight});
           }
           
           void dijkshtra(int source){
               
               vector<int>dist(V,INT_MAX);
               dist[source] = 0;
               
                priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
                pq.push({0,source});
                
                while(!pq.empty()){
                    
                    auto[d,u] = pq.top();
                    pq.pop();
                }
                if(d>dist[u]){
                    continue; //skip it already we found a better path
                }
                
                for(auto[v,weigth] : adj[u]){
                    
                    if(dist[u] + weight < dist[v]){
                        
                        dist[v] = dist[u] + weight;
                        pq.push({dist[v],v});
                    }
                }
               
               
           }
}
