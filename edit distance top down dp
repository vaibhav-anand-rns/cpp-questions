#include <bits/stdc++.h>
using namespace std;

int editDistance(int i, int j, string &s1, string &s2, vector<vector<int>> &dp) {
    // Base cases
    if (i < 0) return j + 1;  // insert remaining characters of s2
    if (j < 0) return i + 1;  // delete remaining characters of s1

    if (dp[i][j] != -1) return dp[i][j];

    if (s1[i] == s2[j])
        return dp[i][j] = editDistance(i-1, j-1, s1, s2, dp);
    else
        return dp[i][j] = 1 + min({ editDistance(i-1, j, s1, s2, dp),    // delete
                                    editDistance(i, j-1, s1, s2, dp),    // insert
                                    editDistance(i-1, j-1, s1, s2, dp)   // replace
                                  });
}

int minEditDistance(string s1, string s2) {
    int n = s1.size(), m = s2.size();
    vector<vector<int>> dp(n, vector<int>(m, -1));
    return editDistance(n-1, m-1, s1, s2, dp);
}

int main() {
    string s1 = "horse", s2 = "ros";
    cout << "Minimum Edit Distance = " << minEditDistance(s1, s2) << endl;
    return 0;
}
