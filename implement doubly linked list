struct node{
    int data;
    Node*prev;
    Node*next;
    Node(int val){
        
        data = val;
        prev == nullptr;
        next == nullptr;
    }
    
    Node*head;
    
    void insertAtHead(int val){
        
        Node*newnode = newnode(int val);
        newnode -> next = head;
        if(head != nullptr){
            
            head -> prev = newnode;
        }
        
        head = newnode;
    }
    
    void insertAtTail(int val){
        
        Node*newnode = newnode(int val);
        if(head == nullptr){
            
            head == newnode;
            return;
        }
        node*temp = head;
        while(temp != nullptr){
            temp = temp->next;
        }
        temp->next = newnode;
        newnode->prev = temp;
        
    }
    void deletenode(int val){
        
        if(head == nullptr){
            cout<< "the linked lsit is empty" << endl ;
            return;
        }
        node*temp = head;
        if(temp -> data == val){
            
            head = temp->next;
            if(head != nullptr){
                head -> prev = nullptr;
            }
            delete temp;
            return;
        }
    }
}
