class solution{
    public:
          
          vector<vector<int>> insert(vector<vector<int>>& intervals,vector<int>& newintervals){
              
              vector<vector<int>> result;
              int i = 0, n = intervals.size();
              // 1. Add all intervals before newInterval (no overlap)
              while(i<n && intervals[i][1]<newintervals[0]){
                  
                  result.push_back(intervals[i]);
                  i++ ;
              }
              // 2. Merge overlapping intervals
              while(i<n && intervals[i][0] <= newintervals[1]){
                  
                  newintervals[0] = min(newintervals[0],intervals[i][0]);
                  newintervals[1] = min(newintervals[0],intervals[i][0]);
                  i++ ;
              }
              result.push_back(newintervals);
               // 3. Add remaining intervals (after newInterval)
              while(i < n){
                  result.push_back(intervals[i]);
                  i++ ;
              }
              
              return result;
          }
}
