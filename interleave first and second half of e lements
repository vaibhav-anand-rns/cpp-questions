#include <iostream>
#include <queue>
#include <stack>
using namespace std;

void interleaveQueue(queue<int>& q) {
    int n = q.size();

    // Check for even number of elements
    if (n % 2 != 0) {
        cout << "Queue has odd number of elements. Cannot interleave." << endl;
        return;
    }

    int half = n / 2;
    stack<int> s;

    // Step 1: Push first half into stack
    for (int i = 0; i < half; ++i) {
        s.push(q.front());
        q.pop();
    }

    // Step 2: Enqueue back the stack elements
    while (!s.empty()) {
        q.push(s.top());
        s.pop();
    }

    // Step 3: Move first half to back to restore order
    for (int i = 0; i < half; ++i) {
        q.push(q.front());
        q.pop();
    }

    // Step 4: Push first half into stack again
    for (int i = 0; i < half; ++i) {
        s.push(q.front());
        q.pop();
    }

    // Step 5: Interleave the elements
    while (!s.empty()) {
        q.push(s.top());   // element from first half
        s.pop();

        q.push(q.front()); // element from second half
        q.pop();
    }
}
