class solution{
    public:
           
           bool isSafe(int node, int color, vector<vector<int>> &graph,vector<int> &colors, int n){
               
               for(int k = 0; k<n; k++){
                   
                   if(graph[node][k] == 1 && colors[k] == color){
                       
                       return false;
                   }
               }
               return true;
           }
           // backtracking to assign colors
           
           bool solve(int node, vector<vector<int>>& graph, int m, int n, vector<int>& colors){
                
                if(node == n){
                    return true;
                }
                for(int col = 1; col<=m; col++){
                    
                    if(isSafe(node,col,graph,colors,n)){
                        
                        colors[node] = col;
                        if(solve(node+1,graph,colors,m,n)){
                            return true;
                        }
                        colors[node] = 0;
                    }
                    
                }
                
                
                
                
               
                 
           }
           return false;
}
