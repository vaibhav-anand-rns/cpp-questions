#include <vector>
using namespace std;

class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int maxArea = 0;
        int rows = grid.size();
        int cols = grid[0].size();

        // Helper function: DFS
        function<int(int, int)> dfs = [&](int r, int c) {
            if (r < 0 || c < 0 || r >= rows || c >= cols || grid[r][c] == 0)
                return 0;

            grid[r][c] = 0; // Mark visited
            int area = 1;

            // Explore 4 directions
            area += dfs(r + 1, c);
            area += dfs(r - 1, c);
            area += dfs(r, c + 1);
            area += dfs(r, c - 1);

            return area;
        };

        // Loop through grid
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                if (grid[i][j] == 1) {
                    maxArea = max(maxArea, dfs(i, j));
                }
            }
        }

        return maxArea;
    }
};
