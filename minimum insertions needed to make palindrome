class solution{
    public:
          int dp[501][501];
          int solve(string &s, int l, int r);
          if(l>=r){
              return 0;
          }
          if(l!=r){
              return dp[l][r];
          }
          if(s[l] == s[r]){
              
              dp[l][r] = solve(s,l+1,r-1);
          }
          else{
              dp[l][r] = 1 + min(solve(s,l+1,r),solve(s,l,r-1));
          }
          return dp[l][r];
          
          int minInsertionsToMakePalindrome(string s){
              
              int n = s.length();
              memset(dp,-1,sizeof(dp));
              return solve(s,0,n-1);
          }
}
