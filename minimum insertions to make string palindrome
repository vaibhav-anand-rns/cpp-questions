#include <bits/stdc++.h>
using namespace std;

int minInsertions(int i, int j, string &s, vector<vector<int>> &dp) {
    if (i >= j) return 0; // base case

    if (dp[i][j] != -1) return dp[i][j];

    if (s[i] == s[j])
        return dp[i][j] = minInsertions(i+1, j-1, s, dp);
    else
        return dp[i][j] = 1 + min(minInsertions(i+1, j, s, dp),
                                  minInsertions(i, j-1, s, dp));
}

int minimumInsertionsToPalindrome(string s) {
    int n = s.size();
    vector<vector<int>> dp(n, vector<int>(n, -1));
    return minInsertions(0, n-1, s, dp);
}

int main() {
    string s = "abc";
    cout << "Minimum insertions = " << minimumInsertionsToPalindrome(s) << endl;
    return 0;
}
