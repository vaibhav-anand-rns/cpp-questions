#include <bits/stdc++.h>
using namespace std;

int minPlatforms(vector<int>& arrival, vector<int>& departure) {
    int n = arrival.size();

    sort(arrival.begin(), arrival.end());
    sort(departure.begin(), departure.end());

    int platforms_needed = 0, max_platforms = 0;
    int i = 0, j = 0;

    while (i < n && j < n) {
        if (arrival[i] <= departure[j]) {
            // Next train arrives before last one departs → need a new platform
            platforms_needed++;
            i++;
            max_platforms = max(max_platforms, platforms_needed);
        } else {
            // Train departs → free a platform
            platforms_needed--;
            j++;
        }
    }

    return max_platforms;
}

int main() {
    vector<int> arrival = {900, 940, 950, 1100, 1500, 1800};
    vector<int> departure = {910, 1200, 1120, 1130, 1900, 2000};

    cout << "Minimum platforms required = " << minPlatforms(arrival, departure) << endl;

    return 0;
}
