class solution{
    public:
           void nQueens(vector<string> &board, int row, int n, vector<vector<string> &ans){
               if(row == n){
                   ans.push_back(board);
                   return;
               }
               for(int j = 0; j<n; j++){
                   if isSafe(board,row,j,n){
                       board[row][j] = 'Q';
                       nQueens(board, row+1, n, ans);
                       board[row][j] = " ";
                   }
               }
               //horizontal
               for(int j = 0; j<n; j++){
                   if(board[row][j] == 'Q'){
                       return false;
                   }
                
               }
               //vertical
               for(int i = 0; i<n; i++){
                   if(board[col][i] == 'Q'){
                       return false;
                   }
               }
               // left diagonal
               for(int i = row, j = col; i>=0 && j >=0; i--,j--){
                   if(board[i][j] == 'Q'){
                       return false;
                   }
                   
               }
               // right diagonal
               for(int i = row, j= col; i>=0 &7 j>=0, i--, j--){
                   if(board[i][j] == 'Q'){
                       return false;
                   }
               }
           }
}
