class solution{
    public:
          int dp[501][501];
          int scs(string &str1, string &str2,int i, int j){
              if(i == 0){
                  return j;
              }
              if(j == 0){
                  return i;
              }
              
              if(dp[i][j] != -1){
                  return dp[i][j];
              }
              if(str[i-1] == str[j-1]){
                  dp[i][j] = 1 + scs(str1,str2,i-1,j-1);
              }
              else{
                  dp[i][j] = 1 + min(scs(str1,str2,i-1,j),scs(str1,str2,j-1,i));
              }
              return dp[i][j];
              
              int shortestCommonSupersequenceLength(string str1, string str2){
                  int n = str1.length();
                  int m = str2.length();
                  memset(dp,-1,sizeof(dp));
                  return(str1,str2,n,m);
              }
              
}
}
