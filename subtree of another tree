#include <iostream>
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left, *right;

    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

// Check if two trees are identical
bool isIdentical(TreeNode* root1, TreeNode* root2) {
    if (!root1 && !root2) return true;
    if (!root1 || !root2) return false;

    return (root1->val == root2->val) &&
           isIdentical(root1->left, root2->left) &&
           isIdentical(root1->right, root2->right);
}

// Check if S is a subtree of T
bool isSubtree(TreeNode* T, TreeNode* S) {
    if (!S) return true;           // An empty tree is always a subtree
    if (!T) return false;          // Non-empty tree can't be a subtree of an empty tree

    if (isIdentical(T, S)) return true;

    return isSubtree(T->left, S) || isSubtree(T->right, S);
}
