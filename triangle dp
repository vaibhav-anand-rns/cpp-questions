class solution{
    
    public:
          
          int minPath(int i, int j, vector<vector<int>>& triangle, vector<vector<int>>& dp) {
              
              if(i == n-1){
                  return triangle[i][j];
              }
              
              if(dp[i][j] != -1){
                  return dp[i][j];
              }
              
              int down = minPath(i+1,j,triangle,dp);
              int downright = minPath(i+1,j+1,triangle,dp);
              
              dp[i][j] = traingle[i][j] + min(down,downright);
              return dp[i][j];
          }
          int minimumPathSumInTriangle(vector<vector<int>>& triangle){
              
              int n = triangle.size();
              vector<vector<int>> dp(n,vector<int>(n,-1));
              
          }
}
