bool search(int i, int j, int n, int m,vector<vector<char>> &board,string &word, int k){
    
    if(k == word.size()){
        return true;
    }
    if(i<0 || j < 0 || i == m || j == m || board[i][j] != word[k]){
        
         return false;
    }
    
    char ch = board[i][j];
    board[i][j] = '#';
    
    
    bool op1 = search(i+1,j,m,n,board,word,k+1);
    bool op2 = search(i-1,j,m,n,board,word,k+1);
    bool op3 = search(i,j+1,m,n,board,word,k+1);
    bool op4 = search(i,j-1,m,n,board,word,k+1);
    board[i][j] = ch;
    return op1||op2||op3}||op4;
}
bool present(vector<vector<char>> &board, string word, intn, int m){
    
    for(int i = 0; i<n; i++){
        for(int j = 0; j<m; j++){
            if(board[i][j] == word[o]){
                if(search(i,j,n,m,word,0)){
                    return true;
                }
            }
        }
    }
}
